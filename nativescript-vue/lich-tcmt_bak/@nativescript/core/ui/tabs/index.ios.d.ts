import { TabContentItem } from '../tab-navigation-base/tab-content-item';
import { TabStripItem } from '../tab-navigation-base/tab-strip-item';
import { TextTransform } from '../text-base';
import { Color } from '../../color';
import { Font } from '../styling/font';
import { TabsBase } from './tabs-common';
export * from './tabs-common';
declare class MDCTabBarDelegateImpl extends NSObject implements MDCTabBarDelegate {
    static ObjCProtocols: {
        prototype: MDCTabBarDelegate;
    }[];
    private _owner;
    static initWithOwner(owner: WeakRef<Tabs>): MDCTabBarDelegateImpl;
    tabBarShouldSelectItem(tabBar: MDCTabBar, item: UITabBarItem): boolean;
    tabBarDidSelectItem(tabBar: MDCTabBar, selectedItem: UITabBarItem): void;
}
declare class UIPageViewControllerImpl extends UIPageViewController {
    tabBar: MDCTabBar;
    scrollView: UIScrollView;
    tabBarDelegate: MDCTabBarDelegateImpl;
    private _owner;
    static initWithOwner(owner: WeakRef<Tabs>): UIPageViewControllerImpl;
    viewDidLoad(): void;
    viewWillAppear(animated: boolean): void;
    viewDidLayoutSubviews(): void;
    traitCollectionDidChange(previousTraitCollection: UITraitCollection): void;
    viewWillTransitionToSizeWithTransitionCoordinator(size: CGSize, coordinator: UIViewControllerTransitionCoordinator): void;
}
export declare class Tabs extends TabsBase {
    nativeViewProtected: UIView;
    selectedIndex: number;
    _canSelectItem: boolean;
    isLoaded: boolean;
    viewController: UIPageViewControllerImpl;
    items: TabContentItem[];
    _ios: UIPageViewControllerImpl;
    viewControllers: UIViewController[];
    tabBarItems: UITabBarItem[];
    private _currentNativeSelectedIndex;
    private _dataSource;
    private _delegate;
    private _iconsCache;
    private _backgroundIndicatorColor;
    _defaultItemBackgroundColor: UIColor;
    private _selectedItemColor;
    private _unSelectedItemColor;
    animationEnabled: boolean;
    constructor();
    createNativeView(): UIView;
    initNativeView(): void;
    disposeNativeView(): void;
    onLoaded(): void;
    onUnloaded(): void;
    get ios(): UIPageViewController;
    layoutNativeView(left: number, top: number, right: number, bottom: number): void;
    _setNativeViewFrame(nativeView: UIView, frame: CGRect): void;
    onSelectedIndexChanged(oldIndex: number, newIndex: number): void;
    _loadUnloadTabItems(newIndex: number): void;
    onMeasure(widthMeasureSpec: number, heightMeasureSpec: number): void;
    _onViewControllerShown(viewController: UIViewController): void;
    private getViewController;
    _setCanBeLoaded(index: number): void;
    private setViewControllers;
    private setItemImages;
    private updateAllItemsColors;
    private updateItemColors;
    private createTabBarItem;
    private getTabBarItemAppearance;
    private getIconRenderingMode;
    private getIcon;
    private getFixedSizeIcon;
    getTabBarBackgroundColor(): UIColor;
    setTabBarBackgroundColor(value: UIColor | Color): void;
    setTabBarItemTitle(tabStripItem: TabStripItem, value: string): void;
    private equalUIColor;
    private isSelectedAndHightlightedItem;
    setTabBarItemBackgroundColor(tabStripItem: TabStripItem, value: UIColor | Color): void;
    setTabBarItemColor(tabStripItem: TabStripItem, value: UIColor | Color): void;
    private setItemColors;
    private setIconColor;
    setTabBarIconColor(tabStripItem: TabStripItem, value: UIColor | Color): void;
    setTabBarIconSource(tabStripItem: TabStripItem, value: UIColor | Color): void;
    setTabBarItemFontInternal(tabStripItem: TabStripItem, value: Font): void;
    getTabBarFontInternal(): UIFont;
    setTabBarFontInternal(value: Font): void;
    getTabBarTextTransform(): TextTransform;
    setTabBarTextTransform(value: TextTransform): void;
    getTabBarColor(): UIColor;
    setTabBarColor(value: UIColor | Color): void;
    getTabBarHighlightColor(): UIColor;
    setTabBarHighlightColor(value: UIColor | Color): void;
    getTabBarSelectedItemColor(): Color;
    setTabBarSelectedItemColor(value: Color): void;
    getTabBarUnSelectedItemColor(): Color;
    setTabBarUnSelectedItemColor(value: Color): void;
    private visitFrames;
    private setViewTextAttributes;
}
